{"ast":null,"code":"var _jsxFileName = \"C:\\\\E\\\\Study\\\\Code\\\\react and restful API . hook tutorial\\\\shopping-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // initial state for the list\n  // a boolean to tell if its been completed, and a quantity\n  const [items, setItems] = useState([{\n    itemName: 'item 1',\n    quantity: 1,\n    isChecked: false\n  }, {\n    itemName: 'item 2',\n    quantity: 1,\n    isChecked: false\n  }, {\n    itemName: 'item 3',\n    quantity: 1,\n    isChecked: false\n  }]);\n\n  //initial default value in input field is empty\n  const [inputValue, setInputValue] = useState('');\n\n  //initial value for total amount\n  const [totalAmount, setTotalAmount] = useState(3);\n\n  //handle the change of value in input field\n  const handleInputChange = e => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  };\n\n  //handle add button for adding new item to the list\n  //get new item name from inputValue state, which is updated by {handleInputChange}\n  const handleAddItem = () => {\n    if (inputValue != \"\") {\n      const newItem = {\n        itemName: inputValue,\n        quantity: 1,\n        isSelected: false\n      };\n      const newItems = [...items, newItem]; //use spread operator to copy existing value of array items, then add newItem in the array\n\n      setItems(newItems); //update items with newItems\n      setInputValue(''); //after adding thhe item, set input field to empty again\n      handleTotalAmout(); //everytime new item is added, rerender total amount by calling the function calculateTotal()\n    } else {\n      alert(\"Please enter an item name!\");\n    }\n  };\n\n  //handle quantity + button\n  //takes in the index to locate the item in array\n  const handleQuantityIncrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity = newItems[index].quantity + 1; //get the quantity value of the item by index\n    //newItems[index].quantity++;\n    setItems(newItems); //update items\n    handleTotalAmout(); //everytime quantity changed, rerender total amount by calling the function calculateTotal()\n  };\n\n  //handle quantity - button\n  const handleQuantityDecrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity--;\n    setItems(newItems);\n    handleTotalAmout(); //everytime quantity changed, rerender total amount by calling the function calculateTotal()\n  };\n\n  //handle check/unchenck of item\n  const itemChecked = index => {\n    const newItems = [...items];\n    newItems[index].isChecked = !newItems[index].isChecked; //toggle between isChecked: true and isCheched: false, \n\n    setItems(newItems);\n  };\n  const handleTotalAmout = () => {\n    const totalItem = items.reduce((total, item) => {\n      return total + item.quantity;\n    }, 0); // executes a reducer function on each element of the array, resulting in single output value. initial from 0\n\n    setTotalAmount(totalItem);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"My Shopping List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-item-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: \"required\",\n          value: inputValue,\n          onChange: handleInputChange,\n          className: \"add-item-input\",\n          placeholder: \"Add an item...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddItem(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-list\",\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-name\",\n            onClick: () => itemChecked(index),\n            children: item.isChecked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheckCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"completed\",\n                children: item.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faMinus,\n                onClick: () => handleQuantityDecrease(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", item.quantity, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus,\n                onClick: () => handleQuantityIncrease(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total\",\n        children: [\"Total: \", totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"trxEVkxD6Oaz23OSNodoDTn39T0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faChevronRight","faChevronLeft","faCircle","faCheckCircle","faPlus","faMinus","App","items","setItems","itemName","quantity","isChecked","inputValue","setInputValue","totalAmount","setTotalAmount","handleInputChange","e","preventDefault","target","value","handleAddItem","newItem","isSelected","newItems","handleTotalAmout","alert","handleQuantityIncrease","index","handleQuantityDecrease","itemChecked","totalItem","reduce","total","item","textAlign","map"],"sources":["C:/E/Study/Code/react and restful API . hook tutorial/shopping-list/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus,faMinus } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n\t// initial state for the list\n\t// a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([\n\t\t{ itemName: 'item 1', quantity: 1, isChecked: false },\n\t\t{ itemName: 'item 2', quantity: 1, isChecked: false },\n\t\t{ itemName: 'item 3', quantity: 1, isChecked: false },\n\t]);\n\n  //initial default value in input field is empty\n\tconst [inputValue, setInputValue] = useState('');\n\n  //initial value for total amount\n\tconst [totalAmount, setTotalAmount] = useState(3);\n\n//handle the change of value in input field\n  const handleInputChange= (e) => {\n\t\te.preventDefault();\n    setInputValue(e.target.value)\n  };\n\n\n  //handle add button for adding new item to the list\n  //get new item name from inputValue state, which is updated by {handleInputChange}\n\tconst handleAddItem= () => {\n    if(inputValue!=\"\")\n    {\n      const newItem = {\n        itemName: inputValue,\n        quantity: 1,\n        isSelected: false,\n      };\n    \n  \n      const newItems = [...items, newItem];//use spread operator to copy existing value of array items, then add newItem in the array\n  \n      setItems(newItems);//update items with newItems\n      setInputValue(''); //after adding thhe item, set input field to empty again\n      handleTotalAmout();//everytime new item is added, rerender total amount by calling the function calculateTotal()\n    }\n    else {\n     alert(\"Please enter an item name!\")\n    }\n\t\t\n\t};\n\n  //handle quantity + button\n  //takes in the index to locate the item in array\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n    newItems[index].quantity= newItems[index].quantity +1; \t\t//get the quantity value of the item by index\n    //newItems[index].quantity++;\n\t\tsetItems(newItems); //update items\n\t\thandleTotalAmout(); //everytime quantity changed, rerender total amount by calling the function calculateTotal()\n\t};\n\n    //handle quantity - button\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\thandleTotalAmout();//everytime quantity changed, rerender total amount by calling the function calculateTotal()\n\t};\n\n//handle check/unchenck of item\n\tconst itemChecked = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isChecked = !newItems[index].isChecked; //toggle between isChecked: true and isCheched: false, \n\n\t\tsetItems(newItems);\n\t};\n\n\tconst handleTotalAmout = () => {\n\t\tconst totalItem = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t}, 0); // executes a reducer function on each element of the array, resulting in single output value. initial from 0\n\n\t\tsetTotalAmount(totalItem);\n\t};\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n        <h2 style={{textAlign: \"center\"}}>My Shopping List</h2>\n\t\t\t\t<div className='add-item-box'>\n\t\t\t\t\t<input type=\"text\" required=\"required\" value={inputValue} onChange={handleInputChange} className='add-item-input' placeholder='Add an item...' />\n          {/*or use errow function directly: onChange={(event) => setInputValue(event.target.value)} \n\t\t  <FontAwesomeIcon icon={faChevronRight} onClick={() => handleAddItem()} />*/}\n\t\t\t\t\t<button  onClick={() => handleAddItem()}>Add</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='item-list'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => itemChecked(index)}>\n\t\t\t\t\t\t\t\t{item.isChecked ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCircle} />\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faMinus} onClick={() => handleQuantityDecrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handleQuantityIncrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='total'>Total: {totalAmount}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}