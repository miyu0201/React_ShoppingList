[{"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-shopping-list\\src\\index.js":"1","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-shopping-list\\src\\App.js":"2","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-shopping-list\\src\\reportWebVitals.js":"3","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react_shoppingtList\\src\\index.js":"4","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react_shoppingtList\\src\\App.js":"5","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react_shoppingtList\\src\\reportWebVitals.js":"6"},{"size":535,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":6354,"mtime":1666255027337,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":535,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":6354,"mtime":1666255027337,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o8p9wk",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x1tav3",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-shopping-list\\src\\index.js",[],[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-shopping-list\\src\\App.js",["34","35","36","37"],[],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faCaretRight, faCircle, faCheckCircle, faPlus,faMinus } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n\t// initial state for the list\n\t// a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([\n\t\t{ itemName: 'Apple', quantity: 1, price: 5,isChecked: false },\n\t\t{ itemName: 'Banana', quantity: 1, price: 4,isChecked: false },\n\t\t{ itemName: 'Orange', quantity: 1, price: 6,isChecked: false },\n\t]);\n\n  //initial default value in input field is empty\n\tconst [inputValue, setInputValue] = useState('');\n\n  //initial value for total amount\n\tconst [totalAmount, setTotalAmount] = useState(3);\n\n\t//initial value for total amount\n\tconst [totalPrice, setTotalPrice] = useState(14);\n\n//handle the change of value in input field\n  const handleInputChange= (e) => {\n\t\te.preventDefault();\n    setInputValue(e.target.value)\n  };\n\n\n  //handle add button for adding new item to the list\n  //get new item name from inputValue state, which is updated by {handleInputChange}\n\tconst handleAddItem= () => {\n    if(inputValue!=\"\")\n    {\n      const newItem = {\n        itemName: inputValue,\n        quantity: 1,\n\t\tprice:1,\n        isSelected: false,\n      };\n    \n  \n      const newItems = [...items, newItem];//use spread operator to copy existing value of array items, then add newItem in the array\n  \n      setItems(newItems);//update items with newItems\n      setInputValue(''); //after adding thhe item, set input field to empty again\n      handleTotalAmout();//everytime new item is added, rerender total amount by calling the function calculateTotal()\n    }\n    else {\n     alert(\"Please enter an item name!\")\n    }\n\t\t\n\t};\n\n  //handle quantity + button\n  //takes in the index to locate the item in array\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n    newItems[index].quantity= newItems[index].quantity +1; \t\t//get the quantity value of the item by index\n    //newItems[index].quantity++;\n\t\tsetItems(newItems); //update items\n\t\thandleTotalAmout(); //everytime quantity changed, rerender total amount by calling the function calculateTotal()\n\t};\n\n    //handle quantity - button\n\tconst handleQuantityDecrease = (index) => {\n\t\t//amount cannot be negative\n\t\tconst newItems = [...items];\n        if (newItems[index].quantity!=0)\n        {\n\t     newItems[index].quantity--;\n\n\t     setItems(newItems);\n\t     handleTotalAmout();//everytime quantity changed, rerender total amount by calling the function calculateTotal()\n        }\t\n\t};\n\n\n\tconst handlePriceIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n    newItems[index].price= newItems[index].price +1; \t\t//get the quantity value of the item by index\n    //newItems[index].quantity++;\n\t\tsetItems(newItems); //update items\n\t\thandleTotalPrice(); //everytime quantity changed, rerender total amount by calling the function calculateTotal()\n\t};\n\n    //handle quantity - button\n\tconst handlePriceDecrease = (index) => {\n\t\t//amount cannot be negative\n\t\tconst newItems = [...items];\n        if (newItems[index].price!=1)\n        {\n\t     newItems[index].price--;\n\n\t     setItems(newItems);\n\t     handleTotalPrice();//everytime quantity changed, rerender total amount by calling the function calculateTotal()\n        }\t\n\t};\n\n//handle check/unchenck of item\n\tconst itemChecked = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isChecked = !newItems[index].isChecked; //toggle between isChecked: true and isCheched: false, \n\n\t\tsetItems(newItems);\n\t};\n\n\tconst handleTotalAmout = () => {\n\t\tconst totalItem = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t}, 0); // executes a reducer function on each element of the array, resulting in single output value. initial from 0\n\n\t\tsetTotalAmount(totalItem);\n\t\thandleTotalPrice();\n\t};\n\n\tconst handleTotalPrice = () => {\n\t\tconst totalPrice = items.reduce((total, item) => {\n\t\t\treturn total + item.price*item.quantity;\n\t\t}, 0); // executes a reducer function on each element of the array, resulting in single output value. initial from 0\n\n\t\tsetTotalPrice(totalPrice);\n\t\t\n\t};\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n        <h2 style={{textAlign: \"center\"}}>My Shopping List</h2>\n\t\t\t\t<div className='add-item-box'>\n\t\t\t\t\t<input type=\"text\" required=\"required\" value={inputValue} onChange={handleInputChange} className='add-item-input' placeholder='Add an item...' />\n          {/*or use errow function directly: onChange={(event) => setInputValue(event.target.value)} */}\n\t\t  <FontAwesomeIcon icon={faCaretRight} onClick={() => handleAddItem()} />\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className='item-container'><h3>Item</h3><div className='quantityPrice-container'><div className='quantity-text'><h3>Quantity</h3></div> <div className='quantity-text'><h3>Price</h3></div></div></div>\n\t\t\t\t<div className='item-list'>\n\t\t\t\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className='item-container'>\t\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => itemChecked(index)}>\n\t\t\t\t\t\t\t\t{item.isChecked ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCircle} />\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"quantityPrice-container\">\n\t\t\t\t\t\t\t<div className='quantity'>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faMinus} onClick={() => handleQuantityDecrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handleQuantityIncrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faMinus} onClick={() => handlePriceDecrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span> ${item.price} </span>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handlePriceIncrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='total'>Total Amount: {totalAmount} <br></br>Total Price: ${totalPrice}</div>\n\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-shopping-list\\src\\reportWebVitals.js",[],[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react_shoppingtList\\src\\index.js",[],[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react_shoppingtList\\src\\App.js",["38","39","40","41"],[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react_shoppingtList\\src\\reportWebVitals.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"47","line":34,"column":18,"nodeType":"48","messageId":"49","endLine":34,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":71,"column":37,"nodeType":"48","messageId":"49","endLine":71,"endColumn":39},{"ruleId":"46","severity":1,"message":"47","line":94,"column":34,"nodeType":"48","messageId":"49","endLine":94,"endColumn":36},{"ruleId":"42","severity":1,"message":"43","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"47","line":34,"column":18,"nodeType":"48","messageId":"49","endLine":34,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":71,"column":37,"nodeType":"48","messageId":"49","endLine":71,"endColumn":39},{"ruleId":"46","severity":1,"message":"47","line":94,"column":34,"nodeType":"48","messageId":"49","endLine":94,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]